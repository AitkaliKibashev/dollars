{"version":3,"sources":["assets/images/dollars_logo.jpg","components/Header/Header.jsx","redux/reducers/messagesReducer.js","API/API.js","pages/Home.jsx","redux/reducers/authReducer.js","pages/Index.jsx","components/common/EmailInput.jsx","components/common/LoginInput.jsx","components/common/PasswordInput.jsx","pages/Login.jsx","routes.js","components/AppRouter.js","App.js","redux/store.js","index.js"],"names":["connect","state","isAuth","auth","user","className","src","dollarsLogo","alt","to","username","SET_MESSAGES","initialState","messages","setMessagesAC","payload","type","url","authData","JSON","parse","localStorage","getItem","chatAPI","data","axios","post","userAPI","login","logout","headers","token","register","dispatch","setMessages","useState","message","setMessage","useEffect","Pusher","logToConsole","cluster","subscribe","bind","console","log","handleSubmit","e","a","preventDefault","target","value","send_date","Date","now","map","m","onSubmit","name","onChange","TOGGLE_IS_AUTH","SET_USER","REMOVE_USER","SET_ERROR","canEnter","enterPassword","error","setUserAC","setErrorAC","toggleIsAuthAC","bool","loginUser","res","status","item","setItem","stringify","registerUser","createUserProfile","id","setCanEnter","setCanEnterAC","handleForm","htmlFor","EmailInput","setIsValid","email","setEmail","dirty","setDirty","setError","test","String","toLowerCase","emailHandler","onBlur","placeholder","LoginInput","setLogin","length","loginHandler","PasswordInput","password","setPassword","passwordHandler","loginError","window","setWindow","onClick","publicRoutes","path","Component","Index","privateRoutes","Home","Login","component","exact","checkIsAuth","itemStr","expiry","getTime","removeItem","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3eb0a977.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/dollars_logo.a3c0389c.jpg\";","import React from 'react'\r\nimport './Header.css'\r\nimport dollarsLogo from '../../assets/images/dollars_logo.jpg'\r\nimport {NavLink} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\n\r\nconst Header = ({isAuth, user}) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"logo\">\r\n                <img src={dollarsLogo} alt=\"dollars\"/>\r\n            </div>\r\n            <ul className=\"link-list\">\r\n                <li className=\"nav-link\" >\r\n                    <NavLink to='/home'>\r\n                        Home\r\n                    </NavLink>\r\n                </li>\r\n                <li className=\"nav-link\" >\r\n                    <NavLink to='/about'>\r\n                        About\r\n                    </NavLink>\r\n                </li>\r\n                <li className=\"nav-link\" >\r\n                    {isAuth ? `Hello, Dollar ${user.username}`:\r\n                        <NavLink to='/login'>\r\n                            Login\r\n                        </NavLink>}\r\n                </li>\r\n            </ul>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    user: state.auth.user\r\n})\r\n\r\nexport default connect(mapStateToProps)(Header)","const SET_MESSAGES = 'SET_MESSAGES'\r\n\r\nconst initialState = {\r\n    messages: [\r\n\r\n    ]\r\n}\r\n\r\nexport const messagesReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_MESSAGES:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, action.payload]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setMessagesAC = (payload) => ({type: SET_MESSAGES, payload})","import axios from \"axios\"\r\n\r\nconst url = 'http://127.0.0.1:8000/api'\r\nconst authData = JSON.parse(localStorage.getItem('auth'))\r\n\r\nexport const chatAPI = {\r\n    sendMessage: (data) => {\r\n        return axios.post(`${url}/messages`, data)\r\n    },\r\n}\r\n\r\nexport const userAPI = {\r\n    login: (data) => {\r\n        return axios.post(`${url}/login/`, data)\r\n    },\r\n    logout: () => {\r\n        return axios.post(`${url}/logout/`, {},\r\n            {\r\n                headers: {\r\n                    'Authorization': `token ${authData.token}`\r\n                }\r\n            }\r\n        )\r\n    },\r\n    register: (data) => {\r\n        return axios.post(`${url}/register/`, data)\r\n    },\r\n}\r\n","import React, {useEffect, useState} from 'react'\r\nimport Header from \"../components/Header/Header\"\r\nimport './Home.css'\r\nimport {connect} from \"react-redux\"\r\nimport Pusher from \"pusher-js\"\r\nimport {setMessagesAC} from \"../redux/reducers/messagesReducer\"\r\nimport {chatAPI} from \"../API/API\"\r\n\r\nconst Home = ({messages, setMessages, isAuth}) => {\r\n    const [message, setMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n        Pusher.logToConsole = false\r\n\r\n        const pusher = new Pusher('7e90421bdf9c4ad510d8', {\r\n            cluster: 'ap2'\r\n        })\r\n\r\n        const channel = pusher.subscribe('chat')\r\n        channel.bind('messages', function(data) {\r\n            setMessages(data)\r\n            console.log(data)\r\n        })\r\n    }, [])\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const data = {\r\n            message: e.target[0].value,\r\n            username: 'admin',\r\n            send_date: Date.now()\r\n        }\r\n\r\n        await chatAPI.sendMessage(data)\r\n\r\n        setMessage('')\r\n    }\r\n\r\n    return (\r\n        <main className=\"main\">\r\n            <div className=\"container\">\r\n                <Header />\r\n                <div className=\"welcome\">\r\n                    <h1>Главная страница закрытого общества Dollars Атырау - главное коммуникационное место.</h1>\r\n                </div>\r\n                <h2 className=\"chat-title\">Main Board</h2>\r\n                <div className=\"main-board\">\r\n                    {messages.map(m =>\r\n                        <div className=\"board-subject\">\r\n                            <div className=\"board-header\">\r\n                                Name: {m.username}\r\n                            </div>\r\n                            <div className=\"board-body\">\r\n                                {m.message}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                </div>\r\n                {isAuth &&\r\n                <form className=\"message-form\" onSubmit={(e => handleSubmit(e))}>\r\n                    <input name=\"message-input\" value={message} onChange={e => setMessage(e.target.value)}/>\r\n                    <button>Send</button>\r\n                </form> }\r\n\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    messages: state.messages.messages,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setMessages: (payload) => dispatch(setMessagesAC(payload))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import {userAPI} from \"../../API/API\"\r\n\r\nconst TOGGLE_IS_AUTH = 'TOGGLE_IS_AUTH'\r\nconst SET_USER = 'SET_USER'\r\nconst REMOVE_USER = 'REMOVE_USER'\r\nconst SET_ERROR = 'SET_ERROR'\r\nconst SET_CAN_ENTER = 'SET_CAN_ENTER'\r\n\r\n\r\nconst initialState = {\r\n    canEnter: true,\r\n    isAuth: true,\r\n    enterPassword: 'babbooka',\r\n    user: {},\r\n    error: null\r\n}\r\n\r\nexport const authReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_IS_AUTH:\r\n            return {\r\n                ...state,\r\n                isAuth: action.payload\r\n            }\r\n        case SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.data\r\n            }\r\n        case REMOVE_USER:\r\n            return {\r\n                ...state,\r\n                user: {}\r\n            }\r\n        case SET_ERROR:\r\n            return  {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setCanEnterAC = (payload) => ({type: SET_CAN_ENTER, payload})\r\nconst setUserAC = (data) => ({type: SET_USER, data})\r\nconst removeUserAC = () => ({type: REMOVE_USER})\r\nconst setErrorAC = (error) => ({type: SET_ERROR, error})\r\nconst toggleIsAuthAC = (bool) => ({type: TOGGLE_IS_AUTH, bool})\r\n\r\n\r\nexport const loginUser = (data) => async (dispatch) => {\r\n    try {\r\n        const res = await userAPI.login(data)\r\n        console.log(res)\r\n\r\n        if (res.status === 200) {\r\n            const item = {\r\n                ...res.data\r\n            }\r\n\r\n            localStorage.setItem('auth', JSON.stringify(item))\r\n\r\n            dispatch(toggleIsAuthAC(true))\r\n            dispatch(setUserAC(res.data.user))\r\n            dispatch(setErrorAC(null))\r\n        }\r\n\r\n    } catch (e) {\r\n        dispatch(setErrorAC('Неверный логин или пароль'))\r\n    }\r\n\r\n}\r\n\r\nexport const registerUser = (data) => async (dispatch) => {\r\n    try {\r\n        const user = await userAPI.register(data)\r\n        await userAPI.createUserProfile({user: user.data.user.id})\r\n\r\n        dispatch(setErrorAC(null))\r\n\r\n    } catch (e) {\r\n        dispatch(setErrorAC('Email или Логин с такими же данными уже существует'))\r\n    }\r\n\r\n}\r\n\r\nexport const checkIsAuth = () => async (dispatch) => {\r\n    const itemStr = localStorage.getItem('auth')\r\n\r\n    if (!itemStr) {\r\n        dispatch(toggleIsAuthAC(false))\r\n        return null\r\n    }\r\n\r\n    const item = JSON.parse(itemStr)\r\n    const expiry = new Date(item.expiry)\r\n    const now = new Date()\r\n\r\n    if (now.getTime() > expiry.getTime()) {\r\n        localStorage.removeItem('auth')\r\n        dispatch(toggleIsAuthAC(false))\r\n        return null\r\n    }\r\n    dispatch(toggleIsAuthAC(true))\r\n    dispatch(setUserAC(item.user))\r\n}\r\n\r\nexport const logoutUser = () => async (dispatch) => {\r\n    try {\r\n        const res = await userAPI.logout()\r\n\r\n        if(res.status === 204) {\r\n            localStorage.removeItem('auth')\r\n            dispatch(toggleIsAuthAC(false))\r\n            dispatch(removeUserAC())\r\n            dispatch(setErrorAC(null))\r\n        }\r\n    } catch (e) {\r\n        dispatch(setErrorAC('Произошла ошибка при выходе'))\r\n    }\r\n}","import React from 'react'\r\nimport dollarsLogo from '../assets/images/dollars_logo.jpg'\r\nimport './Index.css'\r\nimport {connect} from \"react-redux\"\r\nimport {\r\n    setCanEnterAC,\r\n} from \"../redux/reducers/authReducer\"\r\n\r\nconst Index = ({enterPassword, setCanEnter}) => {\r\n\r\n    const handleForm = (e) => {\r\n        e.preventDefault()\r\n        if(e.target[0].value === enterPassword) {\r\n            setCanEnter(true)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"index-main\">\r\n            <div className=\"index-image-wrapper\">\r\n                <img src={dollarsLogo} alt=\"dollars\"/>\r\n            </div>\r\n            <form className=\"enter-form\" onSubmit={e => handleForm(e)}>\r\n                <div className=\"password-input\">\r\n                    <label className=\"password-label\" htmlFor=\"pw\">PASSWORD:</label>\r\n                    <input type=\"password\"\r\n                           className=\"enter-password\"\r\n                           id=\"pw\"\r\n                    />\r\n                </div>\r\n\r\n                <button className=\"enter-btn\">ENTER</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    enterPassword: state.auth.enterPassword\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setCanEnter: (payload) => dispatch(setCanEnterAC(payload))\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Index)","import React, {useEffect, useState} from 'react'\r\n\r\nconst EmailInput = ({setIsValid}) => {\r\n    const [email, setEmail] = useState('')\r\n    const [dirty, setDirty] = useState(false)\r\n    const [error, setError] = useState('Поле не может быть пустым')\r\n\r\n\r\n    useEffect(() => {\r\n        if(error) {\r\n            setIsValid(false)\r\n        } else {\r\n            setIsValid(true)\r\n        }\r\n    }, [error])\r\n\r\n    const handleBlur = (e) => {\r\n        setDirty(true)\r\n    }\r\n\r\n    const emailHandler = (e) => {\r\n        const re = /^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\.\\w{2,3})+$/\r\n\r\n        const value = e.target.value\r\n\r\n        setEmail(value)\r\n\r\n        if (!re.test(String(e.target.value).toLowerCase())) {\r\n            setError(`Некорректный email`)\r\n\r\n            if(!value) {\r\n                setError('Поле не может быть пустым')\r\n            }\r\n        }\r\n        else {\r\n            setError( '')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {(dirty && error) && <div className=\"error-p\">{error}</div>}\r\n            <div className=\"field-wrapper\">\r\n                <input onChange={(e) => emailHandler(e)} value={email} onBlur={(e) => handleBlur(e)} className=\"common-input\" name=\"email\" type=\"email\" placeholder=\"Email\"/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EmailInput","import React, {useEffect, useState} from 'react'\r\n\r\nconst LoginInput = ({setIsValid}) => {\r\n    const [login, setLogin] = useState('')\r\n    const [dirty, setDirty] = useState(false)\r\n    const [error, setError] = useState( 'Поле не может быть пустым')\r\n\r\n    useEffect(() => {\r\n        if(error) {\r\n            setIsValid(false)\r\n        } else {\r\n            setIsValid(true)\r\n        }\r\n    }, [error])\r\n\r\n    const handleBlur = (e) => {\r\n        setDirty(true)\r\n    }\r\n\r\n    const loginHandler = (e) => {\r\n        const maxLength = 30\r\n        const minLength = 3\r\n        const value = e.target.value\r\n\r\n        setLogin(value)\r\n\r\n        if (value.length > maxLength || value.length < minLength) {\r\n            setError(`Логин не может быть меньше ${minLength} символов и больше ${maxLength} символов`)\r\n        } else {\r\n            setError( '')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {(dirty && error) && <div className=\"error-p\">{error}</div>}\r\n            <div className=\"field-wrapper\">\r\n                <input onChange={(e) => loginHandler(e)} value={login}  onBlur={(e) => handleBlur(e)} className=\"common-input\" name=\"login\" type=\"text\" placeholder=\"Логин\"/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginInput","import React, {useEffect, useState} from 'react'\r\n\r\nconst PasswordInput = ({setIsValid}) => {\r\n    const [password, setPassword] = useState('')\r\n    const [dirty, setDirty] = useState(false)\r\n    const [error, setError] = useState('Поле не может быть пустым')\r\n\r\n\r\n    useEffect(() => {\r\n        if(error) {\r\n            setIsValid(false)\r\n        } else {\r\n            setIsValid(true)\r\n        }\r\n    }, [error])\r\n\r\n    const handleBlur = (e) => {\r\n        setDirty(true)\r\n    }\r\n\r\n    const passwordHandler = (e) => {\r\n        const minLength = 8\r\n        const maxLength = 30\r\n\r\n        const value = e.target.value\r\n\r\n        setPassword(value)\r\n\r\n        if (value.length < minLength || value.length > maxLength) {\r\n            setError(`Пароль не может быть меньше ${minLength} символов и больше ${maxLength} символов`)\r\n\r\n            if(!value) {\r\n                setError('Поле не может быть пустым')\r\n            }\r\n        }\r\n        else {\r\n            setError( '')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {(dirty && error) && <div className=\"error-p\">{error}</div>}\r\n            <div className=\"field-wrapper\">\r\n                <input onChange={(e) => passwordHandler(e)} value={password} onBlur={(e) => handleBlur(e)} className=\"common-input\" name=\"password\" type=\"password\" placeholder=\"Пароль\"/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PasswordInput","import React, {useState} from 'react'\r\nimport Header from \"../components/Header/Header\"\r\nimport './Login.css'\r\nimport {connect} from \"react-redux\"\r\nimport {setMessagesAC} from \"../redux/reducers/messagesReducer\"\r\nimport EmailInput\r\n    from \"../components/common/EmailInput\"\r\nimport LoginInput\r\n    from \"../components/common/LoginInput\"\r\nimport PasswordInput\r\n    from \"../components/common/PasswordInput\"\r\nimport {\r\n    loginUser,\r\n    registerUser\r\n} from \"../redux/reducers/authReducer\"\r\n\r\nconst Login = ({loginError, loginUser, registerUser}) => {\r\n    const [isValid, setIsValid] = useState(false)\r\n    const [window, setWindow] = useState('login')\r\n\r\n    const toggleWindow = () => {\r\n        if(window === 'login') setWindow('register')\r\n        else setWindow('login')\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(\"ok\")\r\n\r\n        const login = e.target[0].value\r\n        const password = e.target[1].value\r\n        const email = e.target[2]?.value\r\n\r\n        const data = {\r\n            username: login,\r\n            password: password\r\n        }\r\n\r\n        if (window === 'login') {\r\n            loginUser(data)\r\n        } else {\r\n            registerUser({\r\n                ...data,\r\n                email: email\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <main className=\"main\">\r\n            <div className=\"container\">\r\n                <Header />\r\n                <div className=\"welcome_login\">\r\n                    <h1>{window === 'register' ? 'Register' : 'Login'}</h1>\r\n                </div>\r\n                {loginError && <p className=\"error-p\">{loginError}</p>}\r\n                <form className=\"auth-form\" onSubmit={e => handleSubmit(e)}>\r\n                    <LoginInput setIsValid={setIsValid}/>\r\n                    {window === 'register' && <EmailInput setIsValid={setIsValid}/>}\r\n                    <PasswordInput setIsValid={setIsValid}/>\r\n\r\n\r\n                    <button className=\"common-btn\">{window === 'register' ? 'Register' : 'Login'}</button>\r\n                </form>\r\n                <p className=\"helper_text\">{window === 'register' ? 'Есть аккаунт?' : 'Нет аккаунта?'}</p>\r\n                <button className=\"switch-btn\" onClick={() => toggleWindow()}>{window === 'register' ? 'Войти' : 'Стань участником общества'}</button>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    loginError: state.auth.error\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setMessages: (payload) => dispatch(setMessagesAC(payload)),\r\n    loginUser,\r\n    registerUser\r\n})\r\n\r\nexport default connect(mapStateToProps, {loginUser, registerUser})(Login)","import Home from \"./pages/Home\"\r\nimport Index from \"./pages/Index\"\r\nimport Login from \"./pages/Login\"\r\n\r\nconst INDEX_ROUTE = '/'\r\nconst HOME_ROUTE = '/home'\r\nconst LOGIN_ROUTE = '/login'\r\n\r\nexport const publicRoutes = [\r\n    {\r\n        path: INDEX_ROUTE,\r\n        Component: Index\r\n    },\r\n\r\n]\r\n\r\nexport const privateRoutes = [\r\n    {\r\n        path: HOME_ROUTE,\r\n        Component: Home\r\n    },\r\n    {\r\n        path: LOGIN_ROUTE,\r\n        Component: Login\r\n    }\r\n\r\n]\r\n","import React from 'react'\r\nimport {\r\n    Redirect,\r\n    Route,\r\n    Switch,\r\n} from 'react-router-dom'\r\nimport {privateRoutes, publicRoutes} from \"../routes\"\r\nimport {connect} from \"react-redux\"\r\n\r\nconst AppRouter = ({canEnter}) => {\r\n    return canEnter ?\r\n        <Switch>\r\n            {privateRoutes.map(({path, Component}) =>\r\n                <Route key={path} path={path} component={Component} exact={true}/>\r\n            )}\r\n            <Redirect to={\"/home\"} />\r\n        </Switch>\r\n        :\r\n        <Switch>\r\n            {publicRoutes.map(({path, Component}) =>\r\n                <Route key={path} path={path} component={Component} exact={true}/>\r\n            )}\r\n            <Redirect to={\"/\"} />\r\n        </Switch>\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    canEnter: state.auth.canEnter\r\n})\r\n\r\nexport default connect(mapStateToProps)(AppRouter)\r\n","import React, {useEffect} from 'react'\nimport './App.css'\nimport AppRouter from \"./components/AppRouter\"\nimport {BrowserRouter} from \"react-router-dom\"\nimport {connect} from \"react-redux\"\nimport {checkIsAuth} from \"./redux/reducers/authReducer\"\n\nconst App = ({checkIsAuth}) => {\n\n    useEffect(() => {\n        checkIsAuth()\n    }, [])\n\n    return (\n        <BrowserRouter>\n            <AppRouter />\n        </BrowserRouter>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n\n})\n\nexport default connect(mapStateToProps, {checkIsAuth})(App)","import {\r\n    applyMiddleware,\r\n    combineReducers,\r\n    createStore\r\n} from \"redux\"\r\nimport {authReducer} from \"./reducers/authReducer\"\r\nimport {messagesReducer} from \"./reducers/messagesReducer\"\r\nimport thunk from \"redux-thunk\"\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    messages: messagesReducer\r\n})\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunk))","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport {Provider} from \"react-redux\"\nimport {store} from \"./redux/store\"\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}